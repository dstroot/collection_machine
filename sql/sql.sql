--name: GET_COLLECTION_ITEMS
SELECT TOP 1000
  I.REFUND_TRANSACTION_ID,
  I.FIRST_NAME,
  I.MIDDLE_INITIAL,
  I.LAST_NAME,
  I.ADDRESS1,
  COALESCE(I.ADDRESS2, '') AS ADDRESS2,
  I.CITY,
  I.STATE,
  I.ZIPCODE,
  I.EMAIL,
  COALESCE(I.MOBILE_PHONE, '') AS MOBILE_PHONE,
  COALESCE(I.AMOUNT_OWED, 0) AS AMOUNT_OWED,
  COALESCE(I.PAYMENT_URL, '') AS PAYMENT_URL,
  I.RTN,
  I.DAN,
  tmp.PROCESS_TYPE_ID,
  tmp.ACTIVITY_TYPE_ID,
  tmp.TIMESTAMP_UTC
FROM
(
    SELECT C.REFUND_TRANSACTION_ID, C.PROCESS_TYPE_ID, C.ACTIVITY_TYPE_ID, C.TIMESTAMP_UTC,
    Rank() over (Partition BY C.REFUND_TRANSACTION_ID ORDER BY C.TIMESTAMP_UTC DESC, C.PROCESS_TYPE_ID DESC,
    C.ACTIVITY_TYPE_ID DESC) AS LAST_ACTIVITY
    FROM OLTP_SYS.dbo.COLLECTION_ACTIVITY C
    WHERE C.PROCESS_TYPE_ID = ?
) tmp
INNER JOIN OLTP_SYS.dbo.PROCESS_DEFINITION D ON tmp.PROCESS_TYPE_ID = D.PROCESS_TYPE_ID AND tmp.ACTIVITY_TYPE_ID = D.ACTIVITY_TYPE_ID
INNER JOIN OLTP_SYS.dbo.COLLECTION_ITEM I ON tmp.REFUND_TRANSACTION_ID = I.REFUND_TRANSACTION_ID
WHERE LAST_ACTIVITY = 1
  AND D.PROCESS_END = 0
  AND I.PAID_IND = 0
  --AND tmp.ACTIVITY_TYPE_ID > 1  -- ****** TAKE THIS LINE OUT ********
  AND DATEADD(minute,DURATION_MINUTES, tmp.TIMESTAMP_UTC) < GETUTCDATE() -- Only if ready to process
    ORDER BY tmp.ACTIVITY_TYPE_ID ASC

--name: GET_PROCESS_ACTIONS
SELECT P.ACTIVITY_TYPE_ID, A.ACTIVITY_NAME, P.DURATION_MINUTES, P.DEBIT_IND, P.DIRECT_MAIL_IND, P.DEBIT_RETRY_IND, P.CUSTOMER_INITIATED_RETRY_IND, P.PROCESS_END, COALESCE(P.EMAIL_FROM_NAME, '') AS NAME, COALESCE(P.EMAIL_FROM_EMAIL, '') AS EMAIL, COALESCE(P.EMAIL_SUBJECT, '') AS SUBJECT, COALESCE(P.EMAIL_TEMPLATE, '') AS TEMPLATE, COALESCE(P.SMS_TEMPLATE, '') AS SMS
    FROM PROCESS_DEFINITION P
        JOIN PROCESS_TYPE T ON P.PROCESS_TYPE_ID = T.PROCESS_TYPE_ID
        JOIN ACTIVITY_TYPE A ON P.ACTIVITY_TYPE_ID = A.ACTIVITY_TYPE_ID
            WHERE P.PROCESS_TYPE_ID = ?
                ORDER BY P.ACTIVITY_TYPE_ID;

--name: GET_PROCESSES
SELECT PROCESS_TYPE_ID, PROCESS_NAME, PROCESS_DESC FROM OLTP_SYS.dbo.PROCESS_TYPE;

--name: INSERT_ACTIVITY
INSERT INTO COLLECTION_ACTIVITY
(
  REFUND_TRANSACTION_ID,
  PROCESS_TYPE_ID,
  ACTIVITY_TYPE_ID
) VALUES(?, ?, ?);

--name: INSERT_COLLECTION_PAYMENT
INSERT INTO COLLECTION_PAYMENT
(
  REFUND_TRANSACTION_ID,
  PAYMENT_AMOUNT,
  PAYMENT_DATE,
  PAYMENT_TYPE_ID,
  CUSTOMER_INITIATED_IND,
  ACH_RETRY_IND
) VALUES(?, ?, ?, ?, ?, ?);

--name: INSERT_EMAIL
INSERT INTO EMAIL_QUEUE
(
  REFUND_TRANSACTION_ID,
  FIRST_NAME,
  MIDDLE_INITIAL,
  LAST_NAME,
  EMAIL_ADDRESS,
  SUBJECT,
  AMOUNT,
  URL,
  FROM_NAME,
  FROM_EMAIL_ADDRESS,
  TEMPLATE,
  QUEUE_VENDOR_ID
) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

--name: INSERT_SMS
INSERT INTO SMS_QUEUE
(
  REFUND_TRANSACTION_ID,
  FIRST_NAME,
  MIDDLE_INITIAL,
  LAST_NAME,
  SMS_PHONE,
  FROM_NAME,
  TEMPLATE
  )
VALUES(?, ?, ?, ?, ?, ?, ?)

--name: INSERT_DIRECT_MAIL
INSERT INTO DIRECT_MAIL_QUEUE
(
  REFUND_TRANSACTION_ID
  )
VALUES(?)

--name: UPDATE_COLLECTION_ITEM
UPDATE COLLECTION_ITEM
    SET PAYMENT_URL = ?, HASH = ?, TOKEN_EXPIRES = ?
        WHERE REFUND_TRANSACTION_ID = ?;

--name: UPDATE_GIACT_CODE
UPDATE COLLECTION_ITEM
    SET GIACT_CODE = ?
        WHERE REFUND_TRANSACTION_ID = ?;

-- name: PAY_GIACT_COLLECTION_ITEM
UPDATE COLLECTION_ITEM
    SET PAID_IND = ?, GIACT_CODE = ?
        WHERE REFUND_TRANSACTION_ID = ?;

-- name: PAY_COLLECTION_ITEM
UPDATE COLLECTION_ITEM
    SET PAID_IND = ?
        WHERE REFUND_TRANSACTION_ID = ?;

--name: GET_GIACT_CODES
SELECT GiactCodeId, DebitFlag FROM GiactCode;
